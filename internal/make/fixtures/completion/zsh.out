### zsh completion for make/go-make
_go-make-filter() {
    awk -v prefix="^${1}" -v pat="[-/]" '
        function min(x, y, l) {
            while (substr(x, 0, l) != substr(y, 0, l)) { l--; }
            return l;
        }
        function short(x, l) {
            return (substr(x, 0, 2) == "--") ? x :
                (m = match(substr(x, l+1), pat)) ? substr(x, 0, l+m) : x;
        }
        ($0 ~ prefix) {
            if (n == 0) { array[n++] = $0; l = length($0); next; }
            k = min(array[n-1], $0, l); y = short($0, k); a = 0;
            for (i = n-1; i >= 0; i--) {
                if (l != k) {
                    x = short(array[i], k); array[i] = x;
                } else { x = array[i]; }
                if (x == y) { a++; }
            }
            if (a == 0) { array[n++] = y; }; l = k;
         }
         END {
             for (key in array) print array[key];
         }';
};
_go-make-show-targets() {
    local CMD="${1}"; local WORD="${2}";
    local FILE="${TMPDIR:-/tmp}/go-make-${USER:-$(whoami)}${PWD}/targets.${CMD}";
    if [ -f "${FILE}" ]; then cat "${FILE}";
        (go-make show-targets-${CMD} >/dev/null &);
    else go-make show-targets-${CMD}; fi 2>/dev/null |
        _go-make-filter "${WORD}";
};
__complete_go-make() {
    local targets=($(_go-make-show-targets "${words[1]}" "${words[-1]}"));
    _describe 'go-make' targets;
};
compdef __complete_go-make go-make;
compdef __complete_go-make make;

